here‚Äôs a complete pack of ready-to-paste GitHub issues for THE COMMISH aligned to the master brief. I grouped them by phase, added labels, dependencies, acceptance criteria, and copy blocks you can drop straight into GitHub (or use with gh issue create).

Tip: create Labels first (below), then paste issues.

‚∏ª

üè∑Ô∏è Labels (create these first)
	‚Ä¢	phase:1-hygiene
	‚Ä¢	phase:2-disputes
	‚Ä¢	phase:3-engagement
	‚Ä¢	phase:4-superpowers
	‚Ä¢	area:api
	‚Ä¢	area:frontend
	‚Ä¢	area:services
	‚Ä¢	area:db
	‚Ä¢	area:discord
	‚Ä¢	area:scheduler
	‚Ä¢	area:rag
	‚Ä¢	area:infra
	‚Ä¢	type:feature
	‚Ä¢	type:bug
	‚Ä¢	type:docs
	‚Ä¢	good-first-task
	‚Ä¢	prio:P0
	‚Ä¢	prio:P1
	‚Ä¢	prio:P2

‚∏ª

üìã Milestones
	‚Ä¢	M1 ‚Äì Hygiene & Peace-of-Mind (Phase 1)
	‚Ä¢	M2 ‚Äì Disputes & Vibes (Phase 2)
	‚Ä¢	M3 ‚Äì Engagement Engine (Phase 3)
	‚Ä¢	M4 ‚Äì Commish Superpowers (Phase 4)
	‚Ä¢	M0 ‚Äì Platform & Observability (Cross-cut)

‚∏ª

üó∫Ô∏è Project board

Project: THE COMMISH Roadmap
Columns: Backlog ‚Üí In Progress ‚Üí In Review ‚Üí Done

‚∏ª

üì¶ Cross-cut (M0)

0.1 ‚Äî Add migration 0005_co_commish.sql

Title: Migrations: add Phase-1/2 base tables and columns
Labels: area:db, type:feature, prio:P0
Milestone: M1 ‚Äì Hygiene & Peace-of-Mind
Description:
Add idempotent migration for:
	‚Ä¢	leagues.feature_flags JSONB default '{}'
	‚Ä¢	leagues.personality TEXT default 'neutral'
	‚Ä¢	members (discord ‚Üî sleeper mapping, unique constraints)
	‚Ä¢	reminders (type/cron/timezone/enabled)
	‚Ä¢	polls + votes
	‚Ä¢	sentiment_logs
	‚Ä¢	trade_insights
	‚Ä¢	ensure vector extension

Acceptance:
	‚Ä¢	Migration applies cleanly in Supabase
	‚Ä¢	Tables visible in dashboard
	‚Ä¢	npm run db:push succeeds without diffs

‚∏ª

0.2 ‚Äî API never returns HTML (guardrails)

Title: Infra: guarantee /api/* never serves HTML
Labels: area:infra, type:bug, prio:P0
Milestone: M1
Description:
Confirm server/vite.ts early guard and server/index.ts ordering. Add /api/v2/* aliases until caches expire. Add JSON 404 for /api/*.

Acceptance:
	‚Ä¢	curl -s $BASE/api/health returns JSON
	‚Ä¢	curl -s $BASE/api/v2/leagues/<id> returns JSON errors (no HTML)
	‚Ä¢	Logs show request, status, ms

‚∏ª

0.3 ‚Äî Observability: structured logs & health metrics

Title: Observability: structured request logs + enhanced /api/health
Labels: area:infra, type:feature, prio:P1
Milestone: M1
Description:
	‚Ä¢	Log: method, path, status, duration, 200-char preview
	‚Ä¢	/api/health includes: database_latency, sleeper_latency, discord_ok, rag_ok, scheduler_loaded, silence_active_now
Acceptance: Health shows fields; logs visible on each API call.

‚∏ª

0.4 ‚Äî QA harness

Title: QA: add repo-root qa.sh + README quickstart
Labels: type:docs, area:infra, prio:P1
Milestone: M1
Description:
Provide qa.sh with calls to /api/health, /api/v2/leagues/:id, /api/polls, /api/rag/answer/:leagueId. Update README.

Acceptance: Script runs locally and on Replit shell; all JSON.

‚∏ª

üü© Phase 1 ‚Äî Hygiene & Peace-of-Mind (M1)

1.1 ‚Äî Owner mapping (API + DB)

Title: Owner Mapping: API to list and map Discord users ‚Üî Sleeper owners
Labels: phase:1-hygiene, area:api, area:db, type:feature, prio:P0
Milestone: M1
Description:
Endpoints:
	‚Ä¢	GET /api/members?leagueId=... -> { mapped[], unmapped[] }
	‚Ä¢	POST /api/members/map { leagueId, sleeperOwnerId, discordUserId }

Rules:
	‚Ä¢	upsert by (league_id, sleeper_owner_id)
	‚Ä¢	unique (league_id, discord_user_id)

Acceptance:
	‚Ä¢	Can map 2+ owners; constraint errors handled as JSON
	‚Ä¢	Events row logged on mapping

Depends on: 0.1

‚∏ª

1.2 ‚Äî Owner mapping (Frontend drag/drop)

Title: Owner Mapping: drag/drop UI in Dashboard
Labels: phase:1-hygiene, area:frontend, type:feature, prio:P1
Milestone: M1
Description:
Panel listing Sleeper teams (left) and Discord users (right). Drag to map; uses 1.1 endpoints.

Acceptance:
	‚Ä¢	Mapped state persists + reloads
	‚Ä¢	Shows ‚Äú@mention ready‚Äù badge when mapped

Depends on: 1.1

‚∏ª

1.3 ‚Äî League Settings: feature flags + personality

Title: League Settings API: read/update feature flags & personality
Labels: phase:1-hygiene, area:api, area:db, type:feature, prio:P0
Milestone: M1
Description:
Endpoints:
	‚Ä¢	GET /api/leagues/:id/settings
	‚Ä¢	PATCH /api/leagues/:id/settings (partial merge with validation)

JSON shape:

{
  "personality":"neutral|sassy|batman|yoda|commish",
  "featureFlags":{
    "reminders":{"lineupLock":true,"waivers":true,"tradeDeadline":true,"byeWeeks":true},
    "memeMode":{"enabled":false,"sfw":true,"threshold":40},
    "silenceWindows":[{"day":"SUN","from":"13:00","to":"16:30","tz":"America/New_York"}]
  }
}

Acceptance:
	‚Ä¢	PATCH persists partial updates
	‚Ä¢	Invalid shapes return 400 with details

Depends on: 0.1

‚∏ª

1.4 ‚Äî League Settings UI (toggles + silence windows)

Title: League Settings UI: reminder toggles, silence windows, meme mode
Labels: phase:1-hygiene, area:frontend, type:feature, prio:P1
Milestone: M1
Description:
	‚Ä¢	Toggles for four reminder packs
	‚Ä¢	Day/time pickers for silence windows
	‚Ä¢	Meme mode toggle + SFW + threshold slider
	‚Ä¢	Personality selector (neutral/sassy/batman/yoda/commish)

Acceptance:
	‚Ä¢	All states roundtrip via 1.3 API
	‚Ä¢	UI prevents overlap/invalid time ranges

Depends on: 1.3

‚∏ª

1.5 ‚Äî Reminder scheduler + silence enforcement

Title: Scheduler: lineup/waiver/trade/bye reminders, respect silence windows
Labels: phase:1-hygiene, area:scheduler, area:services, type:feature, prio:P0
Milestone: M1
Description:
	‚Ä¢	Load reminders from leagues.feature_flags.reminders + reminders table
	‚Ä¢	Schedule per league timezone
	‚Ä¢	If scheduled time falls in silenceWindows, queue and post after window
	‚Ä¢	Log events on send

Acceptance:
	‚Ä¢	Can toggle a reminder on/off and see effect
	‚Ä¢	Test silence window: post delayed correctly

Depends on: 1.3, 0.1

‚∏ª

1.6 ‚Äî Rules Q&A (RAG) polish: snippets + citations

Title: RAG: include section, quote, sources + ‚ÄúCopy to thread‚Äù
Labels: phase:1-hygiene, area:rag, area:discord, type:feature, prio:P1
Milestone: M1
Description:
	‚Ä¢	POST /api/rag/answer/:leagueId { query } -> { answer, quote, section, title, confidence, sources[] }
	‚Ä¢	Dashboard button to ‚ÄúCopy to thread‚Äù, which posts exact citation via bot

Acceptance:
	‚Ä¢	Answers show quote + section
	‚Ä¢	Button posts deadpan citation into selected channel

Depends on: existing RAG service

‚∏ª

1.7 ‚Äî Peace-of-Mind score card

Title: Dashboard: Peace-of-Mind score (league hygiene)
Labels: phase:1-hygiene, area:frontend, area:services, prio:P2
Milestone: M1
Description:
Calculate score combining: #lineups not set, waivers today status, pending trades, reminders configured.
Acceptance: Score updates after configuration changes; shows trend arrow.

Depends on: 1.3, 1.5

‚∏ª

üü® Phase 2 ‚Äî Disputes & Vibes (M2)

2.1 ‚Äî Trade Fairness service (MVP)

Title: Trades: fairness snapshot service + API
Labels: phase:2-disputes, area:services, area:api, prio:P0
Milestone: M2
Description:
	‚Ä¢	services/fairness.ts ‚Üí computeFairness({ leagueId, offer })
	‚Ä¢	Blend: projections, positional scarcity, league norms (past trades), roster needs
	‚Ä¢	POST /api/trades/fairness ‚Üí { fairness:0..100, rationale, comps[] } and log to trade_insights

Acceptance:
	‚Ä¢	Returns deterministic snapshot for same input
	‚Ä¢	Writes trade_insights row

Depends on: 0.1

‚∏ª

2.2 ‚Äî Trades UI: fairness pill + rationale popover

Title: Trades UI: fairness % pill with ‚ÄúWhy?‚Äù popover
Labels: phase:2-disputes, area:frontend, prio:P1
Milestone: M2
Description:
	‚Ä¢	Show % pill on proposed/pending trades
	‚Ä¢	Popover shows rationale and 1‚Äì2 comps
Acceptance: Visible on desktop & mobile; aria accessible.

Depends on: 2.1

‚∏ª

2.3 ‚Äî Vibes Monitor (sentiment logs + DM alerts)

Title: Moderation: Vibes Monitor + DM Commish on spikes
Labels: phase:2-disputes, area:services, area:discord, area:db, prio:P0
Milestone: M2
Description:
	‚Ä¢	services/moderation.ts basic sentiment/toxicity score
	‚Ä¢	Aggregate per channel/time window ‚Üí sentiment_logs
	‚Ä¢	On threshold, DM commish with quick actions: Freeze 15m, Clarify rule, Start blind poll

Acceptance:
	‚Ä¢	Sentiment rows written
	‚Ä¢	DM includes action buttons/links that call endpoints

Depends on: 0.1, 1.6

‚∏ª

2.4 ‚Äî Freeze & Clarify actions

Title: Moderation: /freeze and /clarify endpoints + slash commands
Labels: phase:2-disputes, area:discord, area:api, prio:P1
Milestone: M2
Description:
	‚Ä¢	POST /api/mod/freeze { leagueId, channelId, minutes } ‚Üí bot posts polite pause; logs event
	‚Ä¢	POST /api/mod/clarify { leagueId, channelId, ruleQuery } ‚Üí RAG citation posted
	‚Ä¢	Slash commands available to commish only

Acceptance: Commands visible; actions work; events logged.

Depends on: 2.3, 1.6

‚∏ª

2.5 ‚Äî Blind/anonymous polls

Title: Polls: create/vote/close + anonymous mode
Labels: phase:2-disputes, area:api, area:discord, area:db, prio:P1
Milestone: M2
Description:
	‚Ä¢	POST /api/polls, POST /api/polls/:id/vote, POST /api/polls/:id/close
	‚Ä¢	Anonymous votes (store voter_id but never display)
	‚Ä¢	Discord embed with live tallies

Acceptance:
	‚Ä¢	Create a poll from UI or command
	‚Ä¢	Vote once per user; closing works

Depends on: 0.1

‚∏ª

üü¶ Phase 3 ‚Äî Engagement Engine (M3)

3.1 ‚Äî Weekly Highlights/Reel composer

Title: Engagement: compose 3 weekly highlights + optional image card
Labels: phase:3-engagement, area:services, area:discord, prio:P1
Milestone: M3
Description:
	‚Ä¢	Detect: comeback swing, bench tragedy, blowout
	‚Ä¢	Compose headline text (tone via personality)
	‚Ä¢	Optional: simple image card (Canvas/SVG) hosted; keep MVP text only

Acceptance:
	‚Ä¢	/digest week N includes highlights block
	‚Ä¢	Post to Discord renders cleanly

Depends on: digest service

‚∏ª

3.2 ‚Äî Rivalry Builder

Title: Engagement: rivalry memory (/rivalry @user)
Labels: phase:3-engagement, area:services, area:frontend, prio:P2
Milestone: M3
Description:
Track H2H record lifetime + season; /rivalry returns concise line (‚ÄúYou lead 5‚Äì3 lifetime; 2‚Äì1 this season. Rubber match!‚Äù).
Acceptance: Accurate for sample data; message under 180 chars.

‚∏ª

3.3 ‚Äî Trash-talk writer + Meme mode guardrails

Title: Personality: trash-talk writer + meme thresholds (SFW)
Labels: phase:3-engagement, area:services, area:discord, prio:P1
Milestone: M3
Description:
	‚Ä¢	Personality pack adapter for all outbound messages
	‚Ä¢	Meme mode only fires when enabled + threshold hit and SFW

Acceptance:
	‚Ä¢	Toggle in settings governs behavior
	‚Ä¢	No media posted when SFW on

Depends on: 1.3

‚∏ª

3.4 ‚Äî Weekly Awards

Title: Engagement: weekly awards (Sleepyhead, Top Scorer, Bad Beat, etc.)
Labels: phase:3-engagement, area:services, prio:P2
Milestone: M3
Description:
Compute simple awards from matchup stats and post card.

Acceptance: Awards list posted with short rationale lines.

‚∏ª

üüß Phase 4 ‚Äî Commish Superpowers (M4)

4.1 ‚Äî Terminal verbs (server)

Title: Terminal: implement whitelisted verbs (digest, reindex, simulate trade, set waiver, export rules)
Labels: phase:4-superpowers, area:api, area:services, prio:P1
Milestone: M4
Description:
POST /api/terminal/run { leagueId, command } ‚Üí parse + dispatch to safe verbs. Gate by X-Admin-Key or commish role.

Acceptance:
	‚Ä¢	Each verb executes; errors friendly and structured
	‚Ä¢	Events logged

‚∏ª

4.2 ‚Äî Terminal UI (client)

Title: Terminal UI: command line with history & examples
Labels: phase:4-superpowers, area:frontend, prio:P2
Milestone: M4
Description:
Input with history, examples, and result pane.

Acceptance: Round-trip works for at least 3 verbs.

‚∏ª

4.3 ‚Äî Deep Stats Dashboard

Title: Analytics: participation, time-to-respond, nags avoided
Labels: phase:4-superpowers, area:frontend, area:services, prio:P2
Milestone: M4
Description:
Graph metrics over time; CSV export.

Acceptance: Renders for demo league; export produces valid CSV.

‚∏ª

4.4 ‚Äî Audit Log + Undo

Title: Safety: undo token for bot actions
Labels: phase:4-superpowers, area:services, area:api, prio:P2
Milestone: M4
Description:
Every bot action writes events with undo_token. Admin endpoint can soft-undo (e.g., delete bot message, close poll).

Acceptance: Undo works for at least polls and test posts.

‚∏ª

üß∞ Copy blocks for GitHub CLI (optional)

Example (adjust title/body/labels as you paste):

gh issue create \
  --title "Owner Mapping: API to list and map Discord users ‚Üî Sleeper owners" \
  --body-file issue-1.1.md \
  --label "phase:1-hygiene,area:api,area:db,type:feature,prio:P0" \
  --milestone "M1 ‚Äì Hygiene & Peace-of-Mind" \
  --project "THE COMMISH Roadmap"


‚∏ª

üîó Dependencies summary
	‚Ä¢	0.1 (migrations) ‚Üí blocks 1.1, 1.3, 2.1, 2.3, 2.5
	‚Ä¢	1.3 (settings API) ‚Üí blocks 1.4, 1.5, 3.3
	‚Ä¢	2.1 (fairness svc) ‚Üí blocks 2.2
	‚Ä¢	2.3 (vibes monitor) + 1.6 (RAG) ‚Üí required for 2.4
	‚Ä¢	digest svc present ‚Üí used by 3.1, 4.1
	‚Ä¢	terminal API (4.1) ‚Üí used by 4.2

‚∏ª

‚úÖ Global acceptance gate before each Milestone closes
	‚Ä¢	All new endpoints respond JSON (no HTML) and are documented in README
	‚Ä¢	/api/health shows status:‚Äúok‚Äù in staging with scheduler loaded
	‚Ä¢	No direct process.env.* in routes/services (env.ts only)
	‚Ä¢	Migrations are idempotent and visible in Supabase UI
	‚Ä¢	Discord rate-limit safe (embeds ‚â§4096 chars; retries with backoff)
	‚Ä¢	QA script (qa.sh) passes end-to-end

‚∏ª