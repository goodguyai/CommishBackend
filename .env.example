##############################################################################
# THE COMMISH - Environment Configuration
# 
# This file contains ALL environment variables from Replit Secrets.
# Copy this to `.env` and fill in actual values.
#
# SECURITY: Never commit the actual .env file to version control!
##############################################################################

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL + Supabase)
# ============================================================================
# Primary database connection (Replit auto-provided or Supabase)
DATABASE_URL=postgresql://user:password@host:5432/database

# Supabase-specific database URL (alternative to DATABASE_URL)
SUPABASE_DATABASE_URL=postgresql://user:password@host:5432/database

# SSL mode for PostgreSQL connection
PGSSLMODE=require

# Individual PostgreSQL connection parameters
PGHOST=your-project.supabase.co
PGDATABASE=postgres
PGUSER=postgres
PGPASSWORD=your-supabase-password
PGPORT=5432

# Supabase connection details (duplicates for compatibility)
SUPABASE_HOST=your-project.supabase.co
SUPABASE_PASSWORD=your-supabase-password

# ============================================================================
# DISCORD BOT CONFIGURATION
# ============================================================================
# Get these from: https://discord.com/developers/applications

# Bot token (both names supported for compatibility)
DISCORD_TOKEN=your-discord-bot-token-here
DISCORD_BOT_TOKEN=your-discord-bot-token-here

# Application credentials
DISCORD_APPLICATION_ID=your-application-id-here
DISCORD_PUBLIC_KEY=your-ed25519-public-key-here

# Discord OAuth2 (for user authentication)
DISCORD_CLIENT_ID=your-oauth-client-id
DISCORD_CLIENT_SECRET=your-oauth-client-secret
DISCORD_REDIRECT_URI=https://thecommish.replit.app/api/auth/discord/callback

# Bot permissions integer (for invite links)
# Calculate at: https://discordapi.com/permissions.html
DISCORD_BOT_PERMISSIONS=412317273088

# ============================================================================
# AI/LLM SERVICES
# ============================================================================
# DeepSeek API - For chat completions and function calling
# Get from: https://platform.deepseek.com/api_keys
DEEPSEEK_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# OpenAI API - For text embeddings (text-embedding-ada-002)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ============================================================================
# SUPABASE CONFIGURATION
# ============================================================================
# Supabase project URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase anonymous key (public, safe for frontend)
SUPABASE_ANON_KEY=your-anon-public-key

# Supabase service role key (private, server-side only)
SUPABASE_SERVICE_ROLE_KEY=your-service-role-secret-key

# ============================================================================
# SESSION & SECURITY
# ============================================================================
# Session encryption key (min 32 characters)
# Generate: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
SESSION_SECRET=your-super-secret-session-key-here-min-32-chars

# Admin API keys (both names supported for compatibility)
# Generate: node -e "console.log('sk_admin_' + require('crypto').randomBytes(24).toString('hex'))"
ADMIN_API_KEY=sk_admin_your-secure-admin-key-here
ADMIN_KEY=sk_admin_your-secure-admin-key-here

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================
# Production or development mode
NODE_ENV=development

# Server port (Replit uses 5000 by default)
PORT=5000

# Application base URLs (both formats for compatibility)
APP_URL=https://thecommish.replit.app
APP_BASE_URL=https://thecommish.replit.app

# Node.js runtime options (e.g., memory limits, experimental features)
NODE_OPTIONS=--max-old-space-size=4096

# Demo mode (set to 'true' for testing without Discord OAuth)
DEMO_MODE=false

# Beta mode (controls feature access)
BETA_MODE=true

# ============================================================================
# FRONTEND ENVIRONMENT VARIABLES (VITE_* prefix)
# ============================================================================
# These are exposed to the browser, so never put secrets here!
VITE_APP_NAME=THE COMMISH
VITE_API_BASE_URL=/api

# Supabase frontend configuration
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-public-key

# ============================================================================
# CYPRESS E2E TESTING
# ============================================================================
# Required for running automated tests
CYPRESS_APP_URL=https://thecommish.replit.app
CYPRESS_API_URL=https://thecommish.replit.app

# A valid league UUID from your database for testing
CYPRESS_LEAGUE_UUID=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

# Discord channel ID where test announcements can be sent
CYPRESS_DISCORD_CHANNEL_ID=1234567890123456789

# ============================================================================
# OPTIONAL: SLEEPER PLATFORM
# ============================================================================
# Sleeper uses a public API - no auth required for read operations
# Just provide a league ID for testing
SLEEPER_LEAGUE_ID=your-test-league-id-here

##############################################################################
# SETUP INSTRUCTIONS
##############################################################################
#
# 1. DATABASE SETUP:
#    - Create a Supabase project OR use Replit's built-in PostgreSQL
#    - Enable pgvector extension: CREATE EXTENSION IF NOT EXISTS vector;
#    - Run migrations: npm run db:push
#
# 2. DISCORD BOT SETUP:
#    - Create app at https://discord.com/developers/applications
#    - Enable bot, get token
#    - Set Interactions Endpoint URL: https://thecommish.replit.app/api/discord/interactions
#    - Register slash commands: npm run discord:register
#    - Invite bot to your server with scopes: bot, applications.commands
#
# 3. AI SERVICES SETUP:
#    - Sign up for DeepSeek: https://platform.deepseek.com
#    - Sign up for OpenAI: https://platform.openai.com
#    - Add credits/billing to both accounts
#
# 4. FIRST RUN:
#    - Copy this file to `.env`: cp .env.example .env
#    - Fill in all values above
#    - Install dependencies: npm install
#    - Push database schema: npm run db:push
#    - Start development server: npm run dev
#
# 5. TESTING:
#    - Validation: chmod +x scripts/validate-phase-5.7.sh && ./scripts/validate-phase-5.7.sh
#    - E2E Tests: npx cypress run
#    - Golden League: tsx scripts/set-golden-league.ts
#
##############################################################################

##############################################################################
# COMPLETE REPLIT SECRETS CHECKLIST
##############################################################################
# 
# In Replit, set these in the Secrets tab (ðŸ”’ icon in left sidebar):
# 
# DATABASE & SSL:
# âœ“ PGSSLMODE
# âœ“ DATABASE_URL (auto-provided by Replit)
# âœ“ SUPABASE_DATABASE_URL
# âœ“ SUPABASE_HOST
# âœ“ SUPABASE_PASSWORD
#
# APPLICATION:
# âœ“ APP_BASE_URL
# âœ“ NODE_OPTIONS
#
# DISCORD:
# âœ“ DISCORD_BOT_PERMISSIONS
# âœ“ DISCORD_BOT_TOKEN
# âœ“ DISCORD_CLIENT_ID
# âœ“ DISCORD_CLIENT_SECRET
# âœ“ DISCORD_PUBLIC_KEY
#
# FRONTEND (VITE):
# âœ“ VITE_SUPABASE_URL
# âœ“ VITE_SUPABASE_ANON_KEY
#
# ADMIN & SECURITY:
# âœ“ ADMIN_API_KEY
# âœ“ ADMIN_KEY
# âœ“ SESSION_SECRET
#
# AI SERVICES:
# âœ“ DEEPSEEK_API_KEY
# âœ“ OPENAI_API_KEY
#
# SUPABASE:
# âœ“ SUPABASE_ANON_KEY
# âœ“ SUPABASE_SERVICE_ROLE_KEY
# âœ“ SUPABASE_URL
#
# TESTING (Optional):
# âœ“ CYPRESS_LEAGUE_UUID
# âœ“ CYPRESS_DISCORD_CHANNEL_ID
#
##############################################################################

##############################################################################
# CRITICAL API ENDPOINTS
##############################################################################
#
# v3 Routes (league_id in body/query, NOT path):
# - POST /api/v3/constitution/sync
# - GET  /api/v3/constitution/drafts?league_id=
# - POST /api/v3/constitution/apply
# - POST /api/v3/constitution/reject
# - GET  /api/v3/features?league_id=
# - POST /api/v3/features
# - GET  /api/v3/jobs?league_id=
# - POST /api/v3/jobs/upsert
# - POST /api/v3/jobs/run-now
# - POST /api/v3/rules/ask
#
# v2 Admin Routes (require ADMIN_API_KEY):
# - GET  /api/v2/doctor/discord (public)
# - GET  /api/v2/doctor/cron/detail (requires auth)
# - POST /api/v2/doctor/cron/enqueue/content?dry=true
#
# Legacy Routes:
# - POST /api/announce/send (leagueId in body)
#
##############################################################################

##############################################################################
# DATABASE SCHEMA NOTES
##############################################################################
#
# All tables use UUID primary keys with server-generated defaults:
# - accounts, users, leagues, members, reactions, jobs, etc.
# - Vector embeddings stored in constitution_chunks (pgvector)
# - Session storage in sessions table (connect-pg-simple)
#
# Key relationships:
# - accounts -> users (1:1)
# - leagues -> members (1:N)
# - leagues -> jobs (1:N for each job type)
# - leagues -> constitution_chunks (1:N for RAG)
#
# Important: Never change primary key types (UUID) or use ::uuid casts
# Migration: Always use `npm run db:push` or `npm run db:push --force`
#
##############################################################################

##############################################################################
# KNOWN ISSUES & GOTCHAS
##############################################################################
#
# 1. UUID Guards: All v3 routes validate league_id format (no lg_demo_* allowed)
# 2. Demo Mode: Hard-wall separation prevents UUID guards from seeing demo IDs
# 3. Content Poster: Requires non-null channelId (returns 422 if missing)
# 4. Idempotency: Constitution sync uses settings_hash, announcements use SHA-256
# 5. Rate Limits: @everyone announcements have 24h cooldown per league
# 6. Discord Snowflakes: Always strings, never coerce to numbers
# 7. Admin Protection: Doctor routes require "Authorization: Bearer $ADMIN_API_KEY"
# 8. Duplicate Keys: Some keys exist in multiple formats for compatibility (DISCORD_TOKEN vs DISCORD_BOT_TOKEN)
#
##############################################################################

##############################################################################
# SECRET MAPPING GUIDE
##############################################################################
#
# Some secrets have multiple names for compatibility:
#
# Discord Token:
#   DISCORD_TOKEN = DISCORD_BOT_TOKEN (same value)
#
# Admin Key:
#   ADMIN_API_KEY = ADMIN_KEY (same value)
#
# App URL:
#   APP_URL = APP_BASE_URL (same value)
#
# Supabase Host/Password:
#   PGHOST = SUPABASE_HOST (same value)
#   PGPASSWORD = SUPABASE_PASSWORD (same value)
#
# Database URL:
#   DATABASE_URL = SUPABASE_DATABASE_URL (same value)
#
# Frontend Supabase:
#   VITE_SUPABASE_URL should match SUPABASE_URL
#   VITE_SUPABASE_ANON_KEY should match SUPABASE_ANON_KEY
#
##############################################################################
